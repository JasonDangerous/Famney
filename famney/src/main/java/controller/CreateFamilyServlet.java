package controller;

import java.io.IOException;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

import model.User;
import model.Family;
import model.dao.UserManager;
import model.dao.FamilyManager;

// Handles family account creation with Family Head registration
// Creates new family and first user account
@WebServlet("/CreateFamilyServlet")
public class CreateFamilyServlet extends HttpServlet {
    
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        
        HttpSession session = request.getSession();
        UserValidator validator = new UserValidator();
        
        // Get form inputs
        String familyName = request.getParameter("familyName");
        String fullName = request.getParameter("fullName");
        String email = request.getParameter("email");
        String password = request.getParameter("password");
        String confirmPassword = request.getParameter("confirmPassword");
        
        // Validate all required fields are filled
        if (familyName == null || familyName.trim().isEmpty() ||
            fullName == null || fullName.trim().isEmpty() ||
            email == null || email.trim().isEmpty() ||
            password == null || password.isEmpty() ||
            confirmPassword == null || confirmPassword.isEmpty()) {
            
            session.setAttribute("errorMessage", "Please fill in all required fields");
            response.sendRedirect("register_family.jsp");
            return;
        }
        
        // Validate family name
        if (!validator.validateFamilyName(familyName)) {
            session.setAttribute("errorMessage", "Family name must be 2-100 characters");
            response.sendRedirect("register_family.jsp");
            return;
        }
        
        // Validate full name
        if (!validator.validateFullName(fullName)) {
            session.setAttribute("errorMessage", "Name must be 2-100 characters, letters only");
            response.sendRedirect("register_family.jsp");
            return;
        }
        
        // Validate email format
        if (!validator.validateEmail(email)) {
            session.setAttribute("errorMessage", "Please enter a valid email address");
            response.sendRedirect("register_family.jsp");
            return;
        }
        
        // Validate password length
        if (!validator.validatePassword(password)) {
            session.setAttribute("errorMessage", "Password must be at least 6 characters");
            response.sendRedirect("register_family.jsp");
            return;
        }
        
        // Check passwords match
        if (!validator.passwordsMatch(password, confirmPassword)) {
            session.setAttribute("errorMessage", "Passwords do not match");
            response.sendRedirect("register_family.jsp");
            return;
        }
        
        try {
            // Get DAO managers from session
            UserManager userManager = (UserManager) session.getAttribute("userManager");
            FamilyManager familyManager = (FamilyManager) session.getAttribute("familyManager");
            
            if (userManager == null || familyManager == null) {
                session.setAttribute("errorMessage", "System error. Please try again");
                response.sendRedirect("register_family.jsp");
                return;
            }
            
            // Clean up any inactive account with this email (from closed families)
            // This allows users to re-register after their previous family was closed
            userManager.cleanupInactiveUser(email);
            
            // Check if email already exists (for active users)
            if (userManager.emailExists(email)) {
                session.setAttribute("errorMessage", "Email already registered. Please login instead");
                response.sendRedirect("register_family.jsp");
                return;
            }
            
            // Create new family first
            Family family = new Family();
            family.setFamilyName(familyName.trim());
            // Family ID and code will be generated by FamilyManager
            
            // Placeholder for familyHead - will update after user creation
            family.setFamilyHead("TEMP");
            
            Family createdFamily = familyManager.createFamily(family);
            
            if (createdFamily == null) {
                session.setAttribute("errorMessage", "Failed to create family. Please try again");
                response.sendRedirect("register_family.jsp");
                return;
            }
            
            // Create Family Head user account
            User user = new User();
            user.setFullName(fullName.trim());
            user.setEmail(email.trim());
            user.setPassword(password); // Will be hashed by UserManager
            user.setRole("Family Head");
            user.setFamilyId(createdFamily.getFamilyId());
            
            boolean userCreated = userManager.createUser(user);
            
            if (!userCreated) {
                session.setAttribute("errorMessage", "Failed to create user account. Please try again");
                response.sendRedirect("register_family.jsp");
                return;
            }
            
            // Update family head ID in family record
            createdFamily.setFamilyHead(user.getUserId());
            familyManager.updateFamilyName(createdFamily.getFamilyId(), createdFamily.getFamilyName());
            
            // Registration successful - create session
            session.setAttribute("user", user);
            session.setAttribute("family", createdFamily);
            session.setAttribute("successMessage", "Family account created successfully!");
            
            // Redirect to family created success page
            response.sendRedirect("family_created.jsp");
            
        } catch (Exception e) {
            e.printStackTrace();
            session.setAttribute("errorMessage", "An error occurred during registration. Please try again");
            response.sendRedirect("register_family.jsp");
        }
    }
    
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // Redirect GET requests to registration page
        response.sendRedirect("register_family.jsp");
    }
}